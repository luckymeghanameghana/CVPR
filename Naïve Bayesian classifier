from sklearn.datasets import load_digits 
from sklearn.model_selection import train_test_split 
from sklearn.naive_bayes import GaussianNB 
from sklearn.metrics import accuracy_score 
# Load the digits dataset 
digits = load_digits() 
# Features and labels 
X = digits.data 
y = digits.target 
# Split the dataset into training and testing sets 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 
# Create a Gaussian Naive Bayes classifier 
gnb = GaussianNB() 
# Train the model 
gnb.fit(X_train, y_train) 
# Predict on the test data 
y_pred = gnb.predict(X_test) 
# Calculate and print accuracy 
accuracy = accuracy_score(y_test, y_pred) 
print("Accuracy of Naive Bayes classifier on Digits dataset: {:.2f}%".format(accuracy * 100))
